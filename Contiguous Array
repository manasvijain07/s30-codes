Contiguous Array -

Given a binary array nums, return the maximum length of a contiguous subarray with an equal number of 0 and 1.

 

Example 1:

Input: nums = [0,1]
Output: 2
Explanation: [0, 1] is the longest contiguous subarray with an equal number of 0 and 1.
Example 2:

Input: nums = [0,1,0]
Output: 2
Explanation: [0, 1] (or [1, 0]) is a longest contiguous subarray with equal number of 0 and 1.

Constraints:

1 <= nums.length <= 105
nums[i] is either 0 or 1.

------------------------*******-----------------------
Solution - 

class Solution {
    public int findMaxLength(int[] nums) {
        HashMap<Integer, Integer> map = new HashMap();
        map.put(0, -1);
        
        int max = 0;
        int rsum = 0;
        
        for(int i = 0; i < nums.length; i++)
        {
            if(nums[i] == 0)
            {
                rsum--;
            }
            else
            {
                rsum++;
            }
            
            if(map.containsKey(rsum))
            {
                max = Math.max(max, i - map.get(rsum));
            }
            else
            {
                map.put(rsum, i);
            }
        }
        return max;
    }
}

// TC - O(n)
// SC - O(n)
